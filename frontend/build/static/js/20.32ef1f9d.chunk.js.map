{"version":3,"sources":["store/services/AuthService.js","store/actions/auth/auth.action.js","components/form.js","pages/SignIn/SignIn.module.scss","hoc/withAuthentication.js","store/services/Api.js","components/signinform.js","pages/SignIn/SignIn.js"],"names":["AuthService","login","email","password","params","API","post","signup","name","headers","verify","token","forgetPass","resetPass","updateProfile","JSON","parse","localStorage","getItem","changePassword","oldpassword","auth","console","log","userid","userId","getProfile","get","dispatch","loginFail","loginSuccess","a","message","type","actionTypes","idToken","success","error","authservice","then","res","data","resdata","setItem","stringify","response","forgetpassword","forgetpasswordFail","forgetpasswordSuccess","loading","resetpassword","resetpasswordFail","resetpasswordSuccess","verifyemail","verifyFail","verifySuccess","signupFail","signupSuccess","length","msg","getProfileFail","getProfileSuccess","profiledata","changepassword","newpassword","changePasswordFail","changePasswordSuccess","useForm","stateSchema","validationSchema","callback","useState","state","setState","disable","setDisable","isDirty","setIsDirty","validateState","useCallback","Object","keys","some","key","isInputFieldRequired","required","stateValue","value","stateError","useEffect","handleOnChange","event","target","validator","regEx","test","prevState","handleOnSubmit","preventDefault","module","exports","authroute","nonauthroute","withAuthentication","Component","WithAuthentication","includes","window","location","pathname","split","this","props","history","push","ROUTES","React","compose","withRouter","axios","create","baseURL","process","responseType","SignInForm","method","id","onSubmit","className","classes","formsignin","htmlFor","onChange","placeholder","disabled","to","SignIn","signin","store","addNotification","title","insert","container","animationIn","animationOut","dismiss","duration","onScreen","isMessage","isValid","signindiv","connect","authReducer","actions","withAuth"],"mappings":"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","file":"static/js/20.32ef1f9d.chunk.js","sourcesContent":["import API from \"./Api\";\n\nclass AuthService {\n    login = (email, password) => {\n        let params = {\n            email:email,\n            password:password\n        }\n        return API.post(\"/login\",params)\n    }\n\n    signup = (name, email, password) => {\n        const headers = {\n            'Url': \"http://3.135.194.11:5000\"\n        }\n        let params = {\n            name: name,\n            email:email,\n            password:password\n        }\n        return API.post(\"/signup\",params,{headers: headers})\n    }\n\n    verify = (email,token) => {\n        \n        let params = {\n            email:email,\n            token:token\n        }\n        return API.post(\"/verifyemail\",params)\n    }\n\n    forgetPass = (email) => {\n        const headers = {\n            'Url': \"http://3.135.194.11:5000\"\n        }\n        let params = {\n            email:email\n        }\n\n        return API.post(\"/forgetpassword\",params,{headers: headers})\n    }\n\n    resetPass = (password,token) => {\n        const headers = {\n            'Url': \"http://3.135.194.11:5000\"\n        }\n        let params = {\n            password:password,\n            token:token\n        }\n        return API.post(\"/resetpassword\",params,{headers: headers})\n    }\n\n    updateProfile = (name) => {\n        let auth = JSON.parse(localStorage.getItem('authUser'));\n        const headers = {\n            'Authorization': auth.token\n        }\n        let params = {\n            name:name\n        }\n        return API.post(\"/updateprofile\",params,{headers: headers})\n    }\n\n    changePassword = (oldpassword,password) => {\n        let auth = JSON.parse(localStorage.getItem('authUser'));\n        console.log(\"Auth\", auth);\n        const headers = {\n            'Authorization': auth.token\n        }\n        let params = {\n            oldpassword:oldpassword,\n            password:password,\n            userid: auth.userId\n        }\n        return API.post(\"/changepassword\",params,{headers: headers})\n    }\n\n    getProfile = () => {\n        let auth = JSON.parse(localStorage.getItem('authUser'));\n        const headers = {\n            'Authorization': auth.token\n        }\n        return API.get(\"/profile\",{headers:headers});\n    }\n}\n\nexport default AuthService;","import * as actionTypes from './auth.actiontype';\nimport AuthService from '../../services/AuthService';\n\n\nexport const login = (email,password) => {\n    return async dispatch => {\n        function loginFail(message) {\n            dispatch({ \n                type: actionTypes.LOGIN_FAIL,\n                message:message\n            });\n            return {success:false,error:message}\n        }\n        function loginSuccess(token, userId, message) {\n            dispatch({ \n                type:actionTypes.LOGIN_SUCCESS,\n                idToken:token,\n                userId:userId,\n                message:message\n            })\n            return {success:true,message:message};\n        }\n        try {\n            dispatch({ \n                type: actionTypes.LOGIN_START \n            });\n            let authservice = new AuthService();\n            const data = await authservice.login(email,password).then((res)=>{\n                 console.log(\"Response\", res);\n                if(res.data.success){\n                    let resdata = {\n                        token:res.data.token,\n                        userid:res.data.userid\n                    }\n                    localStorage.setItem(\"authUser\",JSON.stringify(resdata));\n                    return loginSuccess(res.data.token,res.data.userid,res.data.message);\n                }else{\n                    return loginFail(res.data.message); \n                }\n            });\n            return data;\n        } catch (error) {\n            if(error.response){\n                \n                return loginFail(error.response.data.message);\n            }else{\n                return loginFail(\"Something went wrong!\");\n            }\n        }\n      }\n}\n\nexport const forgetpassword = (email) => {\n    return async dispatch => {\n        function forgetpasswordFail(message) {\n            dispatch({ \n                type: actionTypes.FORGET_FAIL,\n                message:message,\n                loading:false \n            });\n            return {success:false,error:message}\n        }\n        function forgetpasswordSuccess(message) {\n            dispatch({ \n                type: actionTypes.FORGET_SUCCESS,\n                message: message,\n                loading:false\n            })\n            return {success:true,message:message};\n        }\n        try {\n            dispatch({ \n                type: actionTypes.FORGET_START \n            });\n            let authservice = new AuthService();\n            const data = await authservice.forgetPass(email).then((res)=>{\n                return forgetpasswordSuccess(res.data.message);\n            });\n            return data;\n        } catch (error) {\n            if(error.response){\n                return forgetpasswordFail(error.response.data.message);\n            }else{\n                return forgetpasswordFail(\"Something went wrong!\");\n            }\n        }\n    }\n}\n\nexport const resetpassword = (password,token) => {\n    return async dispatch => {\n        function resetpasswordFail(message) {\n            dispatch({ \n                type: actionTypes.RESET_FAIL,\n                message:message,\n                loading:false \n            });\n            return {success:false,error:message}\n        }\n        function resetpasswordSuccess(message) {\n            dispatch({ \n                type: actionTypes.RESET_SUCCESS,\n                message: message,\n                loading:false\n            })\n            return {success:true,message:message};\n        }\n        try {\n            dispatch({ \n                type: actionTypes.RESET_START \n            });\n            let authservice = new AuthService();\n            const data = await authservice.resetPass(password,token).then((res)=>{\n                return resetpasswordSuccess(res.data.message);\n            });\n            return data;\n        } catch (error) {\n            if(error.response){\n                return resetpasswordFail(error.response.data.message);\n            }else{\n                return resetpasswordFail(\"Something went wrong!\");\n            }\n        }\n      }\n}\n\nexport const verifyemail = (email,token) => {\n    return async dispatch => {\n        function verifyFail(message) {\n            dispatch({ \n                type: actionTypes.VERIFY_FAIL,\n                message:message,\n                loading:false \n            });\n            return {success:false,error:message}\n        }\n        function verifySuccess(message) {\n            dispatch({ \n                type: actionTypes.VERIFY_SUCCESS,\n                message: message,\n                loading:false\n            })\n            return {success:true,message:message};\n        }\n        try {\n            dispatch({ \n                type: actionTypes.VERIFY_START \n            });\n            let authservice = new AuthService();\n            const data = await authservice.verify(email,token).then((res)=>{\n                return verifySuccess(res.data.message);\n            });\n            return data;\n        } catch (error) {\n            if(error.response){\n                return verifyFail(error.response.data.message);\n            }else{\n                return verifyFail(\"Something went wrong!\");\n            }\n            \n        }\n      }\n}\n\nexport const signup = (name,email,password) => {\n    return async dispatch => {\n        function signupFail(message) {\n            dispatch({ \n                type: actionTypes.SIGNUP_FAIL,\n                message:message,\n                loading:false \n            });\n            return {success:false,error:message}\n        }\n\n        function signupSuccess(message) {\n            dispatch({ \n                type: actionTypes.SIGNUP_SUCCESS,\n                message: message,\n                loading:false\n            })\n            return {success:true,message:message};\n        }\n\n        try{\n            dispatch({ \n                type: actionTypes.SIGNUP_START \n            });\n            let authservice = new AuthService();\n            const data = await authservice.signup(name,email,password).then((res)=>{\n                return signupSuccess(res.data.message);\n            });\n            return data;\n        }catch(error){\n            if(error.response){\n                return signupFail(error.response.data.data && error.response.data.data.length>0 ? error.response.data.data[0].msg:error.response.data.message);\n            }else{\n                return signupFail(\"Something went wrong!\");\n            }\n        }\n    }\n}\n\nexport const updateprofile = (name) => {\n    return async dispatch => {\n        function updateProfileFail(message) {\n            dispatch({ \n                type: actionTypes.UPDATE_PROFILE_FAIL,\n                message:message\n            });\n            return {success:false,error:message}\n        }\n        function updateProfileSuccess(message) {\n            dispatch({ \n                type:actionTypes.UPDATE_PROFILE_SUCCESS,\n                message:message\n            })\n            return {success:true,message:message};\n        }\n        try{\n            dispatch({ \n                type: actionTypes.UPDATE_PROFILE_START\n            });\n            let authservice = new AuthService();\n            const data = await authservice.updateProfile(name).then((res)=>{\n                if(res.data.success){\n                    return updateProfileSuccess(res.data.message);\n                }else{\n                    return updateProfileFail(res.data.message); \n                }\n            });\n            return data;\n        }catch(error){\n            if(error.response){\n                return updateProfileFail(error.response.data.data && error.response.data.data.length>0 ? error.response.data.data[0].msg:error.response.data.message);\n            }else{\n                return updateProfileFail(\"Something went wrong!\");\n            }\n        }\n    }\n}\n\nexport const getProfile = () => {\n    return async dispatch => {\n        function getProfileFail(message){\n            dispatch({ \n                type: actionTypes.GET_PROFILE_FAIL,\n                message:message\n            });\n            return {success:false,error:message}\n        }\n\n        function getProfileSuccess(message, data){\n            dispatch({ \n                type: actionTypes.GET_PROFILE_SUCCESS,\n                message:message,\n                profiledata:data\n            });\n            return {success:false,error:message}\n        }\n        try{\n            dispatch({ \n                type: actionTypes.GET_PROFILE_START\n            });\n            let authservice = new AuthService();\n            const data = await authservice.getProfile().then((res)=>{\n                if(res.data.success){\n                    return getProfileSuccess(res.data.message, res.data.data);\n                }else{\n                    return getProfileFail(res.data.message); \n                }\n            });\n            return data;\n        }catch(error){\n            if(error.response){\n                return getProfileFail(error.response.data.data && error.response.data.data.length>0 ? error.response.data.data[0].msg:error.response.data.message);\n            }else{\n                return getProfileFail(\"Something went wrong!\");\n            }\n        }\n    }\n}\n\nexport const changepassword = (password, newpassword) => {\n    return async dispatch => {\n        function changePasswordFail(message) {\n            dispatch({ \n                type: actionTypes.CHANGE_PASSWORD_FAIL,\n                message:message\n            });\n            return {success:false,error:message}\n        }\n        function changePasswordSuccess(message) {\n            dispatch({ \n                type:actionTypes.CHANGE_PASSWORD_SUCCESS,\n                message:message\n            })\n            return {success:true,message:message};\n        }\n        try{\n            dispatch({ \n                type: actionTypes.CHANGE_PASSWORD_START\n            });\n            let authservice = new AuthService();\n            const data = await authservice.changePassword(password, newpassword).then((res)=>{\n                if(res.data.success){\n                    return changePasswordSuccess(res.data.message);\n                }else{\n                    return changePasswordFail(res.data.message); \n                }\n            });\n            return data;\n        }catch(error){\n            if(error.response){\n                return changePasswordFail(error.response.data.data && error.response.data.data.length>0 ? error.response.data.data[0].msg:error.response.data.message);\n            }else{\n                return changePasswordFail(\"Something went wrong!\");\n            }\n        }\n    }\n}","import { useState, useEffect, useCallback } from 'react';\n\nfunction useForm(stateSchema, validationSchema = {}, callback) {\n    const [state, setState] = useState(stateSchema);\n    const [disable, setDisable] = useState(true);\n    const [isDirty, setIsDirty] = useState(false);\n\n    const validateState = useCallback(() => {\n      const hasErrorInState = Object.keys(validationSchema).some(key => {\n          const isInputFieldRequired = validationSchema[key].required;\n          const stateValue = state[key].value; \n          const stateError = state[key].error; \n          return (isInputFieldRequired && !stateValue) || stateError;\n       });\n       return hasErrorInState;\n  }, [state, validationSchema]);\n\n    useEffect(() => {\n      setDisable(true);\n    }, []);\n  \n    useEffect(() => {\n      if (isDirty) {\n        setDisable(validateState());\n      }\n    }, [state, isDirty, validateState]);\n  \n\n    const handleOnChange = useCallback(\n      event => {\n        setIsDirty(true);\n        const name = event.target.name;\n        const value = event.target.value;\n        let error = '';\n        if (validationSchema[name].required) {\n          if (!value) {\n            error = 'This is required field.';\n          }\n        }\n  \n        if (\n          validationSchema[name].validator !== null &&\n          typeof validationSchema[name].validator === 'object'\n        ) {\n          if (value && !validationSchema[name].validator.regEx.test(value)) {\n            error = validationSchema[name].validator.error;\n          }\n        }\n  \n        setState(prevState => ({\n          ...prevState,\n          [name]: { value, error },\n        }));\n      },\n      [validationSchema]\n    );\n  \n    const handleOnSubmit = useCallback(event => {\n        event.preventDefault();\n        if (!validateState()) {\n            callback(state);\n        }\n      },\n      [state,callback,validateState]\n    );\n  \n    return { state, disable, handleOnChange, handleOnSubmit };\n  }\n  \n  export default useForm;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signindiv\":\"SignIn_signindiv__2h0uX\",\"formsignin\":\"SignIn_formsignin__1yUcQ\",\"checkbox\":\"SignIn_checkbox__1diCW\",\"form-control\":\"SignIn_form-control__-JWfU\"};","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport * as ROUTES from '../routes/routesConstant'; \nimport {compose} from 'recompose';\n\nconst authroute = [\n     'dashboard',\n     'adddocument',\n     'editdocument',\n     'documents',\n     'cms',\n     'flipbook',\n     'photobooth'\n]\n\nconst nonauthroute = [\n    'signup',\n    'signin',\n    'verify',\n    'reset',\n    'forgetpass'\n]\n\nconst withAuthentication = Component => {\n    class WithAuthentication extends React.Component{\n\n        componentDidMount(){\n            let auth = JSON.parse(localStorage.getItem(\"authUser\"));\n            if(!auth && authroute.includes(window.location.pathname.split('/')[1])){\n                this.props.history.push(ROUTES.SIGN_IN);\n            }\n            if(auth && nonauthroute.includes(window.location.pathname.split('/')[1])){\n                this.props.history.push(ROUTES.DASHBOARD);\n            }\n            if(auth && window.location.pathname === \"/\"){\n                this.props.history.push(ROUTES.DASHBOARD);\n            }\n        }\n        render() {\n            return <Component {...this.props}/>;\n        } \n    }\n\n    return compose(\n        withRouter\n    )(WithAuthentication);\n}\n\nexport default withAuthentication;","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: process.env.REACT_APP_API_ENDPOINT,\n    responseType: \"json\"\n});","import React from 'react';\nimport useForm from './form';\nimport {Link} from 'react-router-dom';\n\nconst SignInForm = (props) => {\n    const stateSchema = {\n        email: { value: '', error: '' },\n        password: { value: '', error: '' }\n    };\n\n    const validationStateSchema = {\n        email: {\n          required: true,\n          validator: {\n            regEx: /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i,\n            error: 'Invalid email format.'\n          },\n        },\n        password: {\n          required: true\n        }\n      };\n\n      const { state, handleOnChange, handleOnSubmit, disable } = useForm(\n        stateSchema,\n        validationStateSchema,\n        props.method\n      );\n\n      return (\n        <form id=\"signinform\" onSubmit={handleOnSubmit} className={props.classes.formsignin}>\n            <div className=\"bg-white rounded box-shadow p-5 h-100 justify-content-center align-items-center\">\n                <div className=\"text-center\">\n                    <h4 className=\"h3 mb-3 font-weight-normal mt-2\">Sign In</h4>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\" className=\"sr-only\">Email address</label>\n                  <input onChange={handleOnChange} name=\"email\" type=\"email\" id=\"email\" className=\"form-control\" placeholder=\"Email address\"/>\n                  {state.email.error && <p className=\"invalid-feedback\">{state.email.error}</p>}\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\" className=\"sr-only\">Password</label>\n                  <input onChange={handleOnChange} type=\"password\" id=\"password\" className=\"form-control\" name=\"password\" placeholder=\"Password\"/>\n                  {state.password.error && <p className=\"invalid-feedback\">{state.password.error}</p>}\n                </div>\n                <button disabled={props.loading || disable?true:false} className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in{props.loading?(<i className=\"fa fa-circle-o-notch fa-spin ml-3\"></i>):null}</button>\n                <p className=\"text-center\">\n                  <Link className=\"btn\" to=\"/forgetpass\">Forgot password?</Link>\n                </p>\n            </div>\n        </form>\n      );\n}\n\nexport default SignInForm;\n\n","import React,{Component} from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/auth/auth.action';\nimport classes from './SignIn.module.scss';\nimport SignInForm from '../../components/signinform'; \nimport withAuth from '../../hoc/withAuthentication';\nimport { store } from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css'\nimport 'animate.css/animate.min.css';\n\nclass SignIn extends Component{\n       constructor(props){\n          super(props)\n          this.state = {\n              isMessage:false,\n              isValid:true,\n          }\n       }\n\n      signin = async (state) =>{\n        const signin = await this.props.signin(state.email.value,state.password.value);\n        if(signin.success){\n          this.props.history.push(\"/dashboard\")\n        }\n        if(!signin.success){\n          store.addNotification({\n              title: 'Error',\n              message: signin.error,\n              type: 'danger',\n              insert: 'top',\n              container: 'top-right',\n              animationIn:  [\"animate__animated\", \"animate__fadeIn\"],\n              animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n              dismiss: {\n                duration: 2000,\n                onScreen: true,\n              }\n          })\n        }\n      }\n\n      render(){\n          return(\n             <div className={classes.signindiv}>\n                 <SignInForm method={this.signin} loading={this.props.loading} classes={classes}/>\n              </div> \n          )\n      }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.authReducer.loading,\n    error: state.authReducer.error,\n    message:state.authReducer.message\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      signin:(email,password)=>dispatch(actions.login(email,password))\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withAuth(SignIn));"],"sourceRoot":""}
{"version":3,"sources":["store/services/CmsService.js","store/actions/cms/cms.action.js","hoc/withAuthentication.js","store/services/Api.js","pages/Cms/Cms.js"],"names":["CmsService","addCms","data","headers","JSON","parse","localStorage","getItem","token","params","formdata","API","post","updateCms","cmsid","put","getCms","get","getCmsById","deleteCms","delete","addcms","dispatch","addCmsFail","addCmsSuccess","a","message","type","actionTypes","success","error","cmsservice","then","res","response","getcms","getCmsFail","getCmsSuccess","cms","cmsId","getCmsByIdFail","getCmsByIdSuccess","cmsdetail","deletecms","deleteCmsFail","deleteCmsSuccess","editcms","editCmsFail","editCmsSuccess","authroute","nonauthroute","withAuthentication","Component","WithAuthentication","auth","includes","window","location","pathname","split","this","props","history","push","ROUTES","React","compose","withRouter","axios","create","baseURL","process","responseType","Cms","confirm","store","addNotification","title","insert","container","animationIn","animationOut","dismiss","duration","onScreen","setState","tabledata","columns","state","copyToClipboard","text","textArea","document","createElement","value","body","appendChild","select","msg","execCommand","console","log","err","removeChild","copyCode","documentid","copyGfGText","getElementById","name","selector","sortable","cell","row","to","_id","className","onClick","id","tableData","ROUTE","filter","export","print","pagination","highlightOnHover","connect","loading","cmsReducer","usercms","actions","withAuth"],"mappings":"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","file":"static/js/26.a736d12e.chunk.js","sourcesContent":["import API from \"./Api\";\n\nclass CmsService {\n     addCms = (data) => {\n        let auth = JSON.parse(localStorage.getItem('authUser'));\n        const headers = {\n           'Authorization': auth.token\n        }\n        let params = {\n            formdata:data\n        }\n        return API.post(\"/cms\",params,{headers: headers})\n     }\n\n     updateCms = (cmsid,data) => {\n        let auth = JSON.parse(localStorage.getItem('authUser'));\n        const headers = {\n            'Authorization': auth.token\n         }\n         let params = {\n            formdata:data\n         }\n         return API.put(`/cms/${cmsid}`,params,{headers: headers})\n     }\n\n     getCms = () => {\n       let auth = JSON.parse(localStorage.getItem('authUser'));\n       const headers = {\n           'Authorization': auth.token\n       }\n       return API.get(`/allcms`,{headers: headers})\n    }\n\n    getCmsById = (cmsid) => {\n        let auth = JSON.parse(localStorage.getItem('authUser'));\n        const headers = {\n            'Authorization': auth.token\n        }\n        return API.get(`/getcmsbyid/${cmsid}`,{headers: headers})\n     }\n\n     deleteCms = (cmsid) => {\n        let auth = JSON.parse(localStorage.getItem('authUser'));\n        const headers = {\n            'Authorization': auth.token\n        }\n        return API.delete(`/cms/${cmsid}`,{headers: headers})\n     }\n}\n\nexport default CmsService;","import * as actionTypes from './cms.actiontype';\nimport CmsService from '../../services/CmsService';\n\nexport const addcms = (formdata) => {\n    return async dispatch => {\n        function addCmsFail(message) {\n            dispatch({ \n                type: actionTypes.ADD_CMS_FAIL,\n                message:message\n            });\n            return {success:false,error:message}\n        }\n        function addCmsSuccess(message) {\n            dispatch({ \n                type:actionTypes.ADD_CMS_SUCCESS,\n                message:message\n            })\n            return {success:true,message:message};\n        }\n        try {\n            dispatch({ \n                type: actionTypes.ADD_CMS_START\n            });\n            let cmsservice = new CmsService();\n            const data = await cmsservice.addCms(formdata).then((res)=>{\n                if(res.data.success){\n                    return addCmsSuccess(res.data.message);\n                }else{\n                    return addCmsFail(res.data.message); \n                }\n            });\n            return data;\n        } catch (error) {\n            if(error.response){\n                return addCmsFail(error.response.data.message);\n            }else{\n                return addCmsFail(\"Something went wrong!\");\n            }\n        }\n      }\n}\n\nexport const getcms = () => {\n    return async dispatch => {\n        function getCmsFail(message) {\n            dispatch({ \n                type: actionTypes.GET_CMS_FAIL,\n                message:message\n            });\n            return {success:false,error:message}\n        }\n        function getCmsSuccess(message, data) {\n            dispatch({ \n                type:actionTypes.GET_CMS_SUCCESS,\n                message:message,\n                cms:data\n            })\n            return {success:true,message:message};\n        }\n        try {\n            dispatch({ \n                type: actionTypes.GET_CMS_START\n            });\n            let cmsservice = new CmsService();\n            const data = await cmsservice.getCms().then((res)=>{\n                if(res.data.success){\n                    return getCmsSuccess(res.data.message, res.data.data);\n                }else{\n                    return getCmsFail(res.data.message); \n                }\n            });\n            return data;\n        } catch (error) {\n            if(error.response){\n                return getCmsFail(error.response.data.message);\n            }else{\n                return getCmsFail(\"Something went wrong!\");\n            }\n        }\n    }\n}\n\nexport const getCmsById = (cmsId) => {\n    return async dispatch => {\n        function getCmsByIdFail(message){\n            dispatch({ \n                type: actionTypes.GET_CMS_BY_ID_FAIL,\n                message:message\n            });\n            return {success:false,error:message}\n        }\n        function getCmsByIdSuccess(message, data){\n            dispatch({ \n                type:actionTypes.GET_CMS_BY_ID_SUCCESS,\n                message:message,\n                cmsdetail:data\n            })\n            return {success:true,message:message};\n        }\n        try{\n            dispatch({ \n                type: actionTypes.GET_CMS_BY_ID_START\n            });\n            let cmsservice = new CmsService();\n            const data = await cmsservice.getCmsById(cmsId).then((res)=>{\n                if(res.data.success){\n                    return getCmsByIdSuccess(res.data.message, res.data.data);\n                }else{\n                    return getCmsByIdFail(res.data.message); \n                }\n            });\n            return data;\n        }catch(error){\n            if(error.response){\n                return getCmsByIdFail(error.response.data.message);\n            }else{\n                return getCmsByIdFail(\"Something went wrong!\");\n            }\n        }\n    }\n}\n\nexport const deletecms = (cmsId) => {\n    return async dispatch => {\n        function deleteCmsFail(message){\n            dispatch({ \n                type: actionTypes.DELETE_CMS_FAIL,\n                message:message\n            });\n            return {success:false,error:message}\n        }\n\n        function deleteCmsSuccess(message){\n            dispatch({ \n                type:actionTypes.DELETE_CMS_SUCCESS,\n                message:message\n            })\n            return {success:true,message:message};\n        }\n\n        try{\n            dispatch({ \n                type: actionTypes.DELETE_CMS_START\n            });\n            let cmsservice = new CmsService();\n            const data = await cmsservice.deleteCms(cmsId).then((res)=>{\n                if(res.data.success){\n                    return deleteCmsSuccess(res.data.message);\n                }else{\n                    return deleteCmsFail(res.data.message); \n                }\n            });\n            return data;\n        }catch(error){\n            if(error.response){\n                return deleteCmsFail(error.response.data.message);\n            }else{\n                return deleteCmsFail(\"Something went wrong!\");\n            }\n        }\n    }\n}\n\nexport const editcms = (cmsid,formdata) => {\n    return async dispatch => {\n        function editCmsFail(message) {\n            dispatch({ \n                type: actionTypes.EDIT_CMS_FAIL,\n                message:message\n            });\n            return {success:false,error:message}\n        }\n        function editCmsSuccess(message) {\n            dispatch({ \n                type:actionTypes.EDIT_CMS_SUCCESS,\n                message:message\n            })\n            return {success:true,message:message};\n        }\n        try {\n            dispatch({ \n                type: actionTypes.EDIT_CMS_START\n            });\n            let cmsservice = new CmsService();\n            const data = await cmsservice.updateCms(cmsid,formdata).then((res)=>{\n                if(res.data.success){\n                    return editCmsSuccess(res.data.message);\n                }else{\n                    return editCmsFail(res.data.message); \n                }\n            });\n            return data;\n        } catch (error) {\n            if(error.response){\n                return editCmsFail(error.response.data.message);\n            }else{\n                return editCmsFail(\"Something went wrong!\");\n            }\n        }\n      }\n}\n\n\n\n\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport * as ROUTES from '../routes/routesConstant'; \nimport {compose} from 'recompose';\n\nconst authroute = [\n     'dashboard',\n     'adddocument',\n     'editdocument',\n     'documents',\n     'cms',\n     'flipbook',\n     'photobooth'\n]\n\nconst nonauthroute = [\n    'signup',\n    'signin',\n    'verify',\n    'reset',\n    'forgetpass'\n]\n\nconst withAuthentication = Component => {\n    class WithAuthentication extends React.Component{\n\n        componentDidMount(){\n            let auth = JSON.parse(localStorage.getItem(\"authUser\"));\n            if(!auth && authroute.includes(window.location.pathname.split('/')[1])){\n                this.props.history.push(ROUTES.SIGN_IN);\n            }\n            if(auth && nonauthroute.includes(window.location.pathname.split('/')[1])){\n                this.props.history.push(ROUTES.DASHBOARD);\n            }\n            if(auth && window.location.pathname === \"/\"){\n                this.props.history.push(ROUTES.DASHBOARD);\n            }\n        }\n        render() {\n            return <Component {...this.props}/>;\n        } \n    }\n\n    return compose(\n        withRouter\n    )(WithAuthentication);\n}\n\nexport default withAuthentication;","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: process.env.REACT_APP_API_ENDPOINT,\n    responseType: \"json\"\n});","import React,{Component} from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/cms/cms.action';\nimport DataTable from 'react-data-table-component';\nimport { Link } from 'react-router-dom'\nimport DataTableExtensions from \"react-data-table-component-extensions\";\nimport \"react-data-table-component-extensions/dist/index.css\";\nimport withAuth from '../../hoc/withAuthentication';\nimport * as ROUTE from '../../routes/routesConstant';\nimport { store } from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css'\nimport 'animate.css'\n\n\nclass Cms extends Component{\n\n   deleteCms = async(cmsid) =>{\n        var r = window.confirm(\"Are you sure you want to delete!\");\n        if(r){\n          let data = await this.props.deletecms(cmsid);\n          if(data.success){\n            store.addNotification({\n              title: 'Success',\n              message: data.message,\n              type: 'default',\n              insert: 'top',\n              container: 'top-right',\n              animationIn: ['animated', 'fadeIn'],\n              animationOut: ['animated', 'fadeOut'],\n              dismiss: {\n                duration: 2000,\n                onScreen: true,\n              },\n            })\n            await this.props.getcms();\n            this.setState({\n              data:this.props.cms,\n              tabledata:{\n                columns:this.state.columns,\n                data:this.props.cms\n              }\n           })\n          }\n          if(!data.success){\n            store.addNotification({\n              title: 'Error',\n              message: data.error,\n              type: 'danger',\n              insert: 'top',\n              container: 'top-right',\n              animationIn: ['animated', 'fadeIn'],\n              animationOut: ['animated', 'fadeOut'],\n              dismiss: {\n                duration: 2000,\n                onScreen: true,\n              },\n            })\n          }\n        } \n   }\n\n   copyToClipboard = (text)=> {\n      var textArea = document.createElement( \"textarea\" );\n      textArea.value = text;\n      document.body.appendChild( textArea );       \n      textArea.select();\n      try {\n        var successful = document.execCommand( 'copy' );\n        var msg = successful ? 'successful' : 'unsuccessful';\n        console.log(msg);\n        store.addNotification({\n          title: 'Success',\n          message: \"Code successfully copied!\",\n          type: 'default',\n          insert: 'top',\n          container: 'top-right',\n          animationIn: ['animated', 'fadeIn'],\n          animationOut: ['animated', 'fadeOut'],\n          dismiss: {\n            duration: 2000,\n            onScreen: true,\n          },\n        })\n      } catch (err) {\n        console.log('Oops, unable to copy',err);\n      }    \n      document.body.removeChild( textArea );\n   }\n   \n   copyCode = async(documentid) => {\n       var copyGfGText = document.getElementById(documentid+\"copycode\").value;\n       this.copyToClipboard(copyGfGText);\n   }\n\n\n    constructor(props){\n      super(props);\n      this.state = {\n         data:[],\n         columns:[\n          {\n            name: 'Form Id',\n            selector: '_id',\n            sortable: false,\n          },\n          {\n            name: 'Action',\n            sortable: false,\n            cell: row => <div><Link to={`/cms/${row._id}`} className=\"btn btn-primary btn-sm\">View Form</Link></div>\n          },\n          {\n            name: 'Action',\n            sortable: false,\n            cell: row => <div><button onClick={()=>{this.deleteCms(row._id)}} className=\"btn btn-primary btn-sm\">Delete Form</button></div>\n          },\n          {\n            name:'Action',\n            sortable: false,\n            cell: row => <div><Link to={`/editcms/${row._id}`} className=\"btn btn-primary btn-sm\">Edit Form</Link></div>\n          },\n          {\n            name:'Action',\n            sortable: false,\n            cell: row => <div>\n                <input type=\"hidden\" id={`${row._id}copycode`} value={`sdfsdf`}/>\n                <button onClick={()=>{this.copyCode(row._id)}} className=\"btn btn-primary btn-sm\">Copy code</button>\n            </div>\n          }\n         ],\n         tableData: {}\n      }\n    }\n\n    getCms = async() =>{\n       await this.props.getcms();\n       this.setState({\n          data:this.props.cms,\n          tabledata:{\n            columns:this.state.columns,\n            data:this.props.cms\n          }\n       })\n    }\n      \n    componentDidMount(){\n        this.getCms();\n    }\n\n    render(){\n        return(\n            <div className={`container mb-5 bg-white rounded p-5`}>\n                <div className=\"row\">\n                    <div className=\"col-md-12 table-responsive\">\n                      <div className=\"d-flex justify-content-end\">\n                            <Link to={ROUTE.ADDCMS} className=\"btn btn-primary\">Add Form</Link>\n                      </div>\n                      <div>\n                        <DataTableExtensions \n                            filter={true}\n                            export={false}\n                            print={false}\n                            {...this.state.tabledata}\t\n                        >\n                          <DataTable\n                              title=\"Forms\"\n                              columns={this.state.columns}\n                              data={this.state.data}\n                              pagination\n                              highlightOnHover\n                          />\n                        </DataTableExtensions>\n                      </div>\n                      \n                    </div>\n                </div>\n           </div>   \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n  return {\n      loading: state.cmsReducer.loading,\n      error: state.cmsReducer.error,\n      message:state.cmsReducer.message,\n      cms: state.cmsReducer.usercms\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      getcms:()=>dispatch(actions.getcms()),\n      deletecms:(cmsid)=>dispatch(actions.deletecms(cmsid))\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withAuth(Cms))\n\n"],"sourceRoot":""}
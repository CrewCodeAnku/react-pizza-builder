{"version":3,"sources":["store/services/DocumentService.js","store/actions/document/document.action.js","hoc/withAuthentication.js","store/services/Api.js","pages/Dashboard/Dashboard.js"],"names":["DocumentService","updateProfile","email","name","auth","JSON","parse","localStorage","getItem","headers","token","params","userid","API","post","editDocument","documentid","documentname","documenttype","document","theme","data","FormData","append","put","addDocument","forEach","file","getDocument","console","log","get","getDocumentById","deleteDocument","delete","updateDocImage","docimage","updateBackground","color","adddocument","title","type","dispatch","addDocumentFail","addDocumentSuccess","a","message","actionTypes","success","error","documentservice","then","res","response","getdocument","getDocumentFail","getDocumentSuccess","documents","documentId","getDocumentByIdFail","getDocumentByIdSuccess","documentdetail","deleteflipbook","deleteDocumentFail","deleteDocumentSuccess","editdocument","editDocumentFail","editDocumentSuccess","updatedocimage","updatedocImageFail","updatedocImageSuccess","backgroundColor","updateBackgroundFail","updateBackgroundSuccess","setBackImage","backimage","authroute","nonauthroute","withAuthentication","Component","WithAuthentication","includes","window","location","pathname","split","this","props","history","push","ROUTES","React","compose","withRouter","axios","create","baseURL","process","responseType","customStyles","headCells","style","fontSize","background","fontWeight","Dashboard","deleteFlipBook","confirm","store","addNotification","insert","container","animationIn","animationOut","dismiss","duration","onScreen","setState","tabledata","columns","state","copyToClipboard","text","textArea","createElement","value","body","appendChild","select","msg","execCommand","err","removeChild","copyCode","copyGfGText","getElementById","selector","sortable","right","cell","row","href","_id","className","onClick","to","id","documenturl","backgroundimage","backgroundcolor","tableData","ROUTE","target","filter","export","print","pagination","highlightOnHover","connect","loading","documentReducer","userdocument","actions","withAuth"],"mappings":"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","file":"static/js/28.a7aad4b9.chunk.js","sourcesContent":["import API from \"./Api\";\n\nclass DocumentService {\n     updateProfile = (email,name) => {\n         let auth = JSON.parse(localStorage.getItem('authUser'));\n         const headers = {\n            'Authorization': auth.token\n         }\n         let params = {\n             userid:auth.userid,\n             name:name\n         }\n         return API.post(\"/updateprofile\",params,{headers: headers})   \n     }\n\n     editDocument = (documentid, documentname, documenttype, document, theme) => {\n        let auth = JSON.parse(localStorage.getItem('authUser'))\n        const headers = {\n            'Authorization': auth.token\n        }\n        const data = new FormData();\n        data.append('documentname',documentname);\n        data.append('documenttype',documenttype);\n        data.append('document', document);\n        data.append('theme', theme);\n        return API.put(`/document/${documentid}`,data,{headers: headers})\n     }\n\n     addDocument = (documentname, documenttype, document, theme) => {\n        let auth = JSON.parse(localStorage.getItem('authUser'))\n        const headers = {\n            'Authorization': auth.token\n        }\n        const data = new FormData();\n        document.forEach(file=>{\n            data.append(\"document\", file);\n        });\n        data.append('userid',auth.userid);\n        data.append('documentname',documentname);\n        data.append('documenttype',documenttype);\n        data.append('theme', theme);\n        return API.post(\"/document\",data,{headers: headers}) \n     }\n\n     getDocument = () => {\n         console.log(\"Documents service\");\n        let auth = JSON.parse(localStorage.getItem('authUser'));\n        const headers = {\n            'Authorization': auth.token\n        }\n        return API.get(`/documents`,{headers: headers})\n     }\n\n     getDocumentById = (documentid) => {\n        let auth = JSON.parse(localStorage.getItem('authUser'));\n        const headers = {\n            'Authorization': auth.token\n        }\n        return API.get(`/getdocumentbyid/${documentid}`,{headers: headers})\n     }\n\n     deleteDocument = (documentid) => {\n        let auth = JSON.parse(localStorage.getItem('authUser'));\n        const headers = {\n            'Authorization': auth.token\n        }\n        return API.delete(`/document/${documentid}`,{headers: headers})\n     }\n\n     updateDocImage = (documentid, docimage) => {\n         console.log(\"Doc\", docimage);\n        let auth = JSON.parse(localStorage.getItem('authUser'))\n        const headers = {\n            'Authorization': auth.token\n        }\n        const data = new FormData();\n        docimage.forEach(file=>{\n            data.append(\"document\", file);\n        });\n        data.append('documentid', documentid);\n        return API.post(`/updatedocimage/${documentid}`,data,{headers: headers}) \n     }\n\n     updateBackground = (documentid, color) => {\n        let auth = JSON.parse(localStorage.getItem('authUser'));\n        const headers = {\n            'Authorization': auth.token\n        }\n        let params = {\n            documentid:documentid,\n            color:color\n        }\n        return API.post(`/updatebackground/${documentid}`,params,{headers: headers})\n     }\n}\n\nexport default DocumentService;","import * as actionTypes from './document.actiontype';\nimport DocumentService from '../../services/DocumentService';\n\nexport const adddocument = (title,type,document,theme) => {\n    return async dispatch => {\n        function addDocumentFail(message) {\n            dispatch({ \n                type: actionTypes.ADD_DOCUMENT_FAIL,\n                message:message\n            });\n            return {success:false,error:message}\n        }\n        function addDocumentSuccess(message) {\n            dispatch({ \n                type:actionTypes.ADD_DOCUMENT_SUCCESS,\n                message:message\n            })\n            return {success:true,message:message};\n        }\n        try {\n            dispatch({ \n                type: actionTypes.ADD_DOCUMENT_START\n            });\n            let documentservice = new DocumentService();\n            const data = await documentservice.addDocument(title,type,document,theme).then((res)=>{\n                if(res.data.success){\n                    return addDocumentSuccess(res.data.message);\n                }else{\n                    return addDocumentFail(res.data.message); \n                }\n            });\n            return data;\n        } catch (error) {\n            if(error.response){\n                return addDocumentFail(error.response.data.message);\n            }else{\n                return addDocumentFail(\"Something went wrong!\");\n            }\n        }\n      }\n}\n\nexport const getdocument = () => {\n    return async dispatch => {\n        function getDocumentFail(message) {\n            dispatch({ \n                type: actionTypes.GET_DOCUMENT_FAIL,\n                message:message\n            });\n            return {success:false,error:message}\n        }\n        function getDocumentSuccess(message, data) {\n            dispatch({ \n                type:actionTypes.GET_DOCUMENT_SUCCESS,\n                message:message,\n                documents:data\n            })\n            return {success:true,message:message};\n        }\n        try {\n            dispatch({ \n                type: actionTypes.GET_DOCUMENT_START\n            });\n            let documentservice = new DocumentService();\n            const data = await documentservice.getDocument().then((res)=>{\n                if(res.data.success){\n                    return getDocumentSuccess(res.data.message, res.data.data);\n                }else{\n                    return getDocumentFail(res.data.message); \n                }\n            });\n            return data;\n        } catch (error) {\n            if(error.response){\n                return getDocumentFail(error.response.data.message);\n            }else{\n                return getDocumentFail(\"Something went wrong!\");\n            }\n        }\n    }\n}\n\nexport const getDocumentById = (documentId) => {\n    return async dispatch => {\n        function getDocumentByIdFail(message){\n            dispatch({ \n                type: actionTypes.GET_DOCUMENT_BY_ID_FAIL,\n                message:message\n            });\n            return {success:false,error:message}\n        }\n        function getDocumentByIdSuccess(message, data){\n            dispatch({ \n                type:actionTypes.GET_DOCUMENT_BY_ID_SUCCESS,\n                message:message,\n                documentdetail:data\n            })\n            return {success:true,message:message};\n        }\n        try{\n            dispatch({ \n                type: actionTypes.GET_DOCUMENT_BY_ID_START\n            });\n            let documentservice = new DocumentService();\n            const data = await documentservice.getDocumentById(documentId).then((res)=>{\n                if(res.data.success){\n                    return getDocumentByIdSuccess(res.data.message, res.data.data);\n                }else{\n                    return getDocumentByIdFail(res.data.message); \n                }\n            });\n            return data;\n        }catch(error){\n            if(error.response){\n                return getDocumentByIdFail(error.response.data.message);\n            }else{\n                return getDocumentByIdFail(\"Something went wrong!\");\n            }\n        }\n    }\n}\n\nexport const deleteflipbook = (documentId) => {\n    return async dispatch => {\n        function deleteDocumentFail(message){\n            dispatch({ \n                type: actionTypes.DELETE_DOCUMENT_FAIL,\n                message:message\n            });\n            return {success:false,error:message}\n        }\n\n        function deleteDocumentSuccess(message){\n            dispatch({ \n                type:actionTypes.DELETE_DOCUMENT_SUCCESS,\n                message:message\n            })\n            return {success:true,message:message};\n        }\n\n        try{\n            dispatch({ \n                type: actionTypes.DELETE_DOCUMENT_START\n            });\n            let documentservice = new DocumentService();\n            const data = await documentservice.deleteDocument(documentId).then((res)=>{\n                if(res.data.success){\n                    return deleteDocumentSuccess(res.data.message);\n                }else{\n                    return deleteDocumentFail(res.data.message); \n                }\n            });\n            return data;\n        }catch(error){\n            if(error.response){\n                return deleteDocumentFail(error.response.data.message);\n            }else{\n                return deleteDocumentFail(\"Something went wrong!\");\n            }\n        }\n    }\n}\n\nexport const editdocument = (documentid,title,type,document, theme) => {\n    return async dispatch => {\n        function editDocumentFail(message) {\n            dispatch({ \n                type: actionTypes.EDIT_DOCUMENT_FAIL,\n                message:message\n            });\n            return {success:false,error:message}\n        }\n        function editDocumentSuccess(message) {\n            dispatch({ \n                type:actionTypes.EDIT_DOCUMENT_SUCCESS,\n                message:message\n            })\n            return {success:true,message:message};\n        }\n        try {\n            dispatch({ \n                type: actionTypes.EDIT_DOCUMENT_START\n            });\n            let documentservice = new DocumentService();\n            const data = await documentservice.editDocument(documentid,title,type,document, theme).then((res)=>{\n                if(res.data.success){\n                    return editDocumentSuccess(res.data.message);\n                }else{\n                    return editDocumentFail(res.data.message); \n                }\n            });\n            return data;\n        } catch (error) {\n            if(error.response){\n                return editDocumentFail(error.response.data.message);\n            }else{\n                return editDocumentFail(\"Something went wrong!\");\n            }\n        }\n      }\n}\n\nexport const updatedocimage = (documentid, docimage) => {\n    return async dispatch => {\n        function updatedocImageFail(message){\n            dispatch({ \n                type: actionTypes.UPDATE_DOCUMENT_IMAGE_FAIL,\n                message:message\n            });\n            return {success:false,error:message}\n        }\n\n        function updatedocImageSuccess(message){\n            dispatch({ \n                type: actionTypes.UPDATE_DOCUMENT_IMAGE_SUCCESS,\n                message:message\n            });\n            return {success:true,message:message};\n        }\n\n        try{\n            dispatch({ \n                type: actionTypes.UPDATE_DOCUMENT_IMAGE_START\n            });\n            let documentservice = new DocumentService();\n            const data = await documentservice.updateDocImage(documentid,docimage).then((res)=>{\n                if(res.data.success){\n                    return updatedocImageSuccess(res.data.message);\n                }else{\n                    return updatedocImageFail(res.data.message);\n                }\n            });\n            return data;\n        } catch(error) {\n            console.log(\"Error\", error);\n            if(error.response){\n                return updatedocImageFail(error.response.data.message);\n            }else{\n                return updatedocImageFail(\"Something went wrong!\");\n            }\n        }\n    }\n}\n\nexport const updateBackground = (documentid, backgroundColor) => {\n    return async dispatch => {\n        function updateBackgroundFail(message){\n            dispatch({ \n                type: actionTypes.UPDATE_BACKGROUND_FAIL,\n                message:message\n            });\n            return {success:false,error:message}\n        }\n\n        function updateBackgroundSuccess(message){\n            dispatch({ \n                type: actionTypes.UPDATE_BACKGROUND_SUCCESS,\n                message:message\n            });\n            return {success:true,message:message};\n        }\n\n        try{\n            dispatch({ \n                type: actionTypes.UPDATE_BACKGROUND_START\n            });\n            let documentservice = new DocumentService();\n            const data = await documentservice.updateBackground(documentid,backgroundColor).then((res)=>{\n                if(res.data.success){\n                    return updateBackgroundSuccess(res.data.message);\n                }else{\n                    return updateBackgroundFail(res.data.message);\n                }\n            });\n            return data;\n        }catch(error){\n            if(error.response){\n                return updateBackgroundFail(error.response.data.message);\n            }else{\n                return updateBackgroundFail(\"Something went wrong!\");\n            }\n        }\n    }\n}\n\nexport const setBackImage = (backimage) => {\n    return async dispatch => {\n        dispatch({ \n            type: actionTypes.SET_BACK_IMAGE,\n            backimage:backimage\n        });\n    }\n}\n\nexport const embedContent = (pagenum, embedcontent) => {\n    return async dispatch => {\n        function embedContentFail(message){\n            dispatch({ \n                type: actionTypes.EMBED_CONTENT_FAIL,\n                message:message\n            });\n            return {success:false,error:message}\n        }\n\n        function embedContentSuccess(message){\n            dispatch({ \n                type: actionTypes.EMBED_CONTENT_SUCCESS,\n                message:message\n            });\n            return {success:true,message:message};\n        }\n\n        try{\n            dispatch({ \n                type: actionTypes.EMBED_CONTENT_START\n            });\n            let documentservice = new DocumentService();\n            const data = await documentservice.embedContent(pagenum,embedcontent).then((res)=>{\n                if(res.data.success){\n                    return embedContentSuccess(res.data.message);\n                }else{\n                    return embedContentFail(res.data.message);\n                }\n            });\n            return data;\n        }catch(error){\n            if(error.response){\n                return embedContentFail(error.response.data.message);\n            }else{\n                return embedContentFail(\"Something went wrong!\");\n            }\n        }\n    }\n}\n\n\n\n\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport * as ROUTES from '../routes/routesConstant'; \nimport {compose} from 'recompose';\n\nconst authroute = [\n     'dashboard',\n     'adddocument',\n     'editdocument',\n     'documents',\n     'cms',\n     'flipbook',\n     'photobooth'\n]\n\nconst nonauthroute = [\n    'signup',\n    'signin',\n    'verify',\n    'reset',\n    'forgetpass'\n]\n\nconst withAuthentication = Component => {\n    class WithAuthentication extends React.Component{\n\n        componentDidMount(){\n            let auth = JSON.parse(localStorage.getItem(\"authUser\"));\n            if(!auth && authroute.includes(window.location.pathname.split('/')[1])){\n                this.props.history.push(ROUTES.SIGN_IN);\n            }\n            if(auth && nonauthroute.includes(window.location.pathname.split('/')[1])){\n                this.props.history.push(ROUTES.DASHBOARD);\n            }\n            if(auth && window.location.pathname === \"/\"){\n                this.props.history.push(ROUTES.DASHBOARD);\n            }\n        }\n        render() {\n            return <Component {...this.props}/>;\n        } \n    }\n\n    return compose(\n        withRouter\n    )(WithAuthentication);\n}\n\nexport default withAuthentication;","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: process.env.REACT_APP_API_ENDPOINT,\n    responseType: \"json\"\n});","import React,{Component} from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/document/document.action';\nimport DataTable from 'react-data-table-component';\nimport { Link } from 'react-router-dom'\nimport DataTableExtensions from \"react-data-table-component-extensions\";\nimport \"react-data-table-component-extensions/dist/index.css\";\nimport withAuth from '../../hoc/withAuthentication';\nimport * as ROUTE from '../../routes/routesConstant';\n//import CopyToClipboard from 'react-copy-html-to-clipboard';\nimport { store } from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css'\nimport 'animate.css'\n\nconst customStyles = {\n  headCells: {\n    style: {\n       fontSize:14,\n       background:\"#DCDCDC\",\n       fontWeight:\"bold\"\n    },\n  }\n};\n\n\nclass Dashboard extends Component{\n\n   deleteFlipBook = async(documentid) =>{\n        var r = window.confirm(\"Are you sure you want to delete!\");\n        if(r){\n          let data = await this.props.deleteflipbook(documentid);\n          if(data.success){\n            store.addNotification({\n              title: 'Success',\n              message: data.message,\n              type: 'default',\n              insert: 'top',\n              container: 'top-right',\n              animationIn: ['animated', 'fadeIn'],\n              animationOut: ['animated', 'fadeOut'],\n              dismiss: {\n                duration: 2000,\n                onScreen: true,\n              },\n            })\n            await this.props.getdocument();\n            this.setState({\n              data:this.props.documents,\n              tabledata:{\n                columns:this.state.columns,\n                data:this.props.documents\n              }\n           })\n          }\n          if(!data.success){\n            store.addNotification({\n              title: 'Error',\n              message: data.error,\n              type: 'danger',\n              insert: 'top',\n              container: 'top-right',\n              animationIn: ['animated', 'fadeIn'],\n              animationOut: ['animated', 'fadeOut'],\n              dismiss: {\n                duration: 2000,\n                onScreen: true,\n              },\n            })\n          }\n        } \n   }\n\n   copyToClipboard = (text)=> {\n\n      var textArea = document.createElement( \"textarea\" );\n      textArea.value = text;\n      document.body.appendChild( textArea );       \n      textArea.select();\n      try {\n        var successful = document.execCommand( 'copy' );\n        var msg = successful ? 'successful' : 'unsuccessful';\n        console.log(msg);\n        store.addNotification({\n          title: 'Success',\n          message: \"Code successfully copied!\",\n          type: 'default',\n          insert: 'top',\n          container: 'top-right',\n          animationIn: ['animated', 'fadeIn'],\n          animationOut: ['animated', 'fadeOut'],\n          dismiss: {\n            duration: 2000,\n            onScreen: true,\n          },\n        })\n      } catch (err) {\n        console.log('Oops, unable to copy',err);\n      }    \n      document.body.removeChild( textArea );\n   }\n   \n   copyCode = async(documentid) => {\n       var copyGfGText = document.getElementById(documentid+\"copycode\").value;\n       this.copyToClipboard(copyGfGText);\n   }\n\n\n    constructor(props){\n      super(props);\n      this.state = {\n         data:[],\n         columns:[\n          {\n            name: 'Title',\n            selector: 'title',\n            sortable: true,\n          },\n          {\n            name: 'Type',\n            selector: 'type',\n            sortable: true,\n            right: true,\n          },\n          {\n            name: 'Action',\n            sortable: false,\n            cell: row => <div><a href={`/flipbook/${row._id}`} className=\"btn btn-primary btn-sm\">View Flipbook</a></div>\n          },\n          {\n            name: 'Action',\n            sortable: false,\n            cell: row => <div><button onClick={()=>{this.deleteFlipBook(row._id)}} className=\"btn btn-primary btn-sm\">Delete Flipbook</button></div>\n          },\n          {\n            name:'Action',\n            sortable: false,\n            cell: row => <div><Link to={`/editflipbook/${row._id}`} className=\"btn btn-primary btn-sm\">Edit Flipbook</Link></div>\n          },\n          {\n            name:'Action',\n            sortable: false,\n            cell: row => <div>\n                <input type=\"hidden\" id={`${row._id}copycode`} value={`<iframe src=\"${window.location.href.split(\"/\")[0]}//${window.location.href.split(\"/\")[2]}/flipbookvideopreview?document=${row.documenturl}&type=${row.type}&theme=${row.theme}&backimage=${row.backgroundimage}&backcolor=${row.backgroundcolor}\"></iframe>`}/>\n                <button onClick={()=>{this.copyCode(row._id)}} className=\"btn btn-primary btn-sm\">Copy code</button>\n            </div>\n          }\n         ],\n         tableData: {}\n      }\n    }\n\n    getDocument = async() =>{\n       await this.props.getdocument();\n       this.setState({\n          data:this.props.documents,\n          tabledata:{\n            columns:this.state.columns,\n            data:this.props.documents\n          }\n       })\n    }\n      \n    componentDidMount(){\n        this.getDocument();\n\n    }\n\n    render(){\n        return(\n            <div className={`container mb-5 bg-white rounded p-5`}>\n                <div className=\"row\">\n                    <div className=\"col-md-12 table-responsive\">\n                      <div className=\"d-flex justify-content-end\">\n                            <Link to={ROUTE.ADDFLIPBOOK} className=\"btn btn-primary\">Add FlipBook</Link>\n                            <Link target=\"_blank\" to={ROUTE.FLIPBOOKDEMO} className=\"btn btn-primary ml-2\">Flipbook Demo</Link>\n                      </div>\n                      <div>\n                        <DataTableExtensions \n                            filter={true}\n                            export={false}\n                            print={false}\n                            {...this.state.tabledata}\t\n                        >\n                          <DataTable\n                              title=\"Flip Book\"\n                              columns={this.state.columns}\n                              data={this.state.data}\n                              customStyles={customStyles}\n                              pagination\n                              highlightOnHover\n                          />\n                        </DataTableExtensions>\n                      </div>\n                      \n                    </div>\n                </div>\n           </div>   \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n  return {\n      loading: state.documentReducer.loading,\n      error: state.documentReducer.error,\n      message:state.documentReducer.message,\n      documents: state.documentReducer.userdocument\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      getdocument:()=>dispatch(actions.getdocument()),\n      deleteflipbook:(documentid)=>dispatch(actions.deleteflipbook(documentid))\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withAuth(Dashboard))\n\n"],"sourceRoot":""}
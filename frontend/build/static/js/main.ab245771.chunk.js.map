{"version":3,"sources":["store/actions/cms/cms.actiontype.js","store/actions/photos/photos.actiontype.js","store/actions/auth/auth.actiontype.js","store/actions/frames/frames.actiontype.js","store/actions/document/document.actiontype.js","pages/App/App.js","store/reducers/auth/auth.reducer.js","store/reducers/document/document.reducer.js","store/reducers/cms/cms.reducer.js","store/reducers/frames/frames.reducer.js","store/reducers/photos/photos.reducer.js","store/reducers/index.js","store/index.js","serviceWorker.js","index.js"],"names":["ADD_CMS_START","ADD_CMS_SUCCESS","ADD_CMS_FAIL","EDIT_CMS_START","EDIT_CMS_SUCCESS","EDIT_CMS_FAIL","GET_CMS_START","GET_CMS_SUCCESS","GET_CMS_FAIL","GET_CMS_BY_ID_START","GET_CMS_BY_ID_SUCCESS","GET_CMS_BY_ID_FAIL","DELETE_CMS_START","DELETE_CMS_SUCCESS","DELETE_CMS_FAIL","PHOTO_CAPTURED","RESET_PHOTOS","PHOTO_ALL_CAPTURED","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAIL","SIGNUP_START","SIGNUP_SUCCESS","SIGNUP_FAIL","VERIFY_START","VERIFY_SUCCESS","VERIFY_FAIL","FORGET_START","FORGET_SUCCESS","FORGET_FAIL","RESET_START","RESET_SUCCESS","RESET_FAIL","UPDATE_PROFILE_START","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_FAIL","CHANGE_PASSWORD_START","CHANGE_PASSWORD_SUCCESS","CHANGE_PASSWORD_FAIL","GET_PROFILE_START","GET_PROFILE_FAIL","GET_PROFILE_SUCCESS","SELECT_FRAME","ADD_DOCUMENT_START","ADD_DOCUMENT_SUCCESS","ADD_DOCUMENT_FAIL","EDIT_DOCUMENT_START","EDIT_DOCUMENT_SUCCESS","EDIT_DOCUMENT_FAIL","GET_DOCUMENT_START","GET_DOCUMENT_SUCCESS","GET_DOCUMENT_FAIL","GET_DOCUMENT_BY_ID_START","GET_DOCUMENT_BY_ID_SUCCESS","GET_DOCUMENT_BY_ID_FAIL","DELETE_DOCUMENT_START","DELETE_DOCUMENT_SUCCESS","DELETE_DOCUMENT_FAIL","UPDATE_DOCUMENT_IMAGE_START","UPDATE_DOCUMENT_IMAGE_SUCCESS","UPDATE_DOCUMENT_IMAGE_FAIL","UPDATE_BACKGROUND_START","UPDATE_BACKGROUND_SUCCESS","UPDATE_BACKGROUND_FAIL","EMBED_CONTENT_START","EMBED_CONTENT_SUCCESS","EMBED_CONTENT_FAIL","SET_BACK_IMAGE","Layout","lazy","App","Fragment","path","component","initialState","token","userId","error","loading","message","time","isAuthenticated","profile","reducer","state","action","type","actionTypes","profiledata","userdocument","documentdetail","totalpost","backimage","documents","usercms","cmsdetail","totalcms","cms","selected_frame","frameReducer","payload","photos","frames","number_of_remain","photoReducer","photo","concat","rootReducer","combineReducers","authReducer","documentReducer","cmsReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Boolean","location","hostname","match","ReactDOM","render","fallback","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ab245771.chunk.js","sourcesContent":["export const ADD_CMS_START              = 'ADD_CMS_START';\nexport const ADD_CMS_SUCCESS            = 'ADD_CMS_SUCCESS';\nexport const ADD_CMS_FAIL               = 'ADD_CMS_FAIL';\n\nexport const EDIT_CMS_START             = 'EDIT_CMS_START';\nexport const EDIT_CMS_SUCCESS           = 'EDIT_CMS_SUCCESS';\nexport const EDIT_CMS_FAIL              = 'EDIT_CMS_FAIL';\n\nexport const GET_CMS_START              = 'GET_CMS_START';\nexport const GET_CMS_SUCCESS            = 'GET_CMS_SUCCESS';\nexport const GET_CMS_FAIL               = 'GET_CMS_FAIL';\n\nexport const GET_CMS_BY_ID_START        = 'GET_CMS_BY_ID_START';\nexport const GET_CMS_BY_ID_SUCCESS      = 'GET_CMS_BY_ID_SUCCESS';\nexport const GET_CMS_BY_ID_FAIL         = 'GET_CMS_BY_ID_FAIL';\n\nexport const DELETE_CMS_START           = 'DELETE_CMS_START';\nexport const DELETE_CMS_SUCCESS         = 'DELETE_CMS_SUCCESS';\nexport const DELETE_CMS_FAIL            = 'DELETE_CMS_FAIL';","export const PHOTO_CAPTURED             = 'PHOTO_CAPTURED';\nexport const RESET_PHOTOS               = 'RESET_PHOTOS';\nexport const PHOTO_ALL_CAPTURED         = 'PHOTO_ALL_CAPTURED';","export const LOGIN_START = 'LOGIN_START';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT   = 'LOGOUT';\nexport const SET_REDIRECT_PATH = 'SET_REDIRECT_PATH'\nexport const SIGNUP_START = 'SIGNUP_START';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\nexport const VERIFY_START = 'VERIFY_START';\nexport const VERIFY_SUCCESS = 'VERIFY_SUCCESS';\nexport const VERIFY_FAIL = 'VERIFY_FAIL';\nexport const FORGET_START = 'FORGET_START';\nexport const FORGET_SUCCESS = 'FORGET_SUCCESS';\nexport const FORGET_FAIL = 'FORGET_FAIL';\nexport const RESET_START = 'RESET_START';\nexport const RESET_SUCCESS = 'RESET_SUCCESS';\nexport const RESET_FAIL = 'RESET_FAIL';\nexport const UPDATE_PROFILE_START = 'UPDATE_PROFILE_START';\nexport const UPDATE_PROFILE_SUCCESS = 'UPDATE_PROFILE_SUCCESS';\nexport const UPDATE_PROFILE_FAIL = 'UPDATE_PROFILE_FAIL';\nexport const CHANGE_PASSWORD_START = 'CHANGE_PASSWORD_START';\nexport const CHANGE_PASSWORD_SUCCESS = 'CHANGE_PASSWORD_SUCCESS';\nexport const CHANGE_PASSWORD_FAIL = 'CHANGE_PASSWORD_FAIL';\nexport const GET_PROFILE_START    = 'GET_PROFILE_START';\nexport const GET_PROFILE_FAIL     = 'GET_PROFILE_FAIL';\nexport const GET_PROFILE_SUCCESS  = 'GET_PROFILE_SUCCESS';","export const SELECT_FRAME       = 'SELECT_FRAME';\n","export const ADD_DOCUMENT_START         = 'ADD_DOCUMENT_START';\nexport const ADD_DOCUMENT_SUCCESS       = 'ADD_DOCUMENT_SUCCESS';\nexport const ADD_DOCUMENT_FAIL          = 'ADD_DOCUMENT_FAIL';\n\nexport const EDIT_DOCUMENT_START        = 'EDIT_DOCUMENT_START';\nexport const EDIT_DOCUMENT_SUCCESS      = 'EDIT_DOCUMENT_SUCCESS';\nexport const EDIT_DOCUMENT_FAIL         = 'EDIT_DOCUMENT_FAIL';\n\nexport const GET_DOCUMENT_START         = 'GET_DOCUMENT_START';\nexport const GET_DOCUMENT_SUCCESS       = 'GET_DOCUMENT_SUCCESS';\nexport const GET_DOCUMENT_FAIL          = 'GET_DOCUMENT_FAIL';\n\nexport const UPDATE_PROFILE_START       = 'UPDATE_PROFILE_START';\nexport const UPDATE_PROFILE_SUCCESS     = 'UPDATE_PROFILE_SUCCESS';\nexport const UPDATE_PROFILE_FAIL        = 'UPDATE_PROFILE_FAIL';\n\nexport const GET_DOCUMENT_BY_ID_START   = 'GET_DOCUMENT_BY_ID_START';\nexport const GET_DOCUMENT_BY_ID_SUCCESS = 'GET_DOCUMENT_BY_ID_SUCCESS';\nexport const GET_DOCUMENT_BY_ID_FAIL    = 'GET_DOCUMENT_BY_ID_FAIL';\n\nexport const DELETE_DOCUMENT_START      = 'DELETE_DOCUMENT_START';\nexport const DELETE_DOCUMENT_SUCCESS    = 'DELETE_DOCUMENT_SUCCESS';\nexport const DELETE_DOCUMENT_FAIL       = 'DELETE_DOCUMENT_FAIL';\n\nexport const UPDATE_DOCUMENT_IMAGE_START   = 'UPDATE_DOCUMENT_IMAGE_START';\nexport const UPDATE_DOCUMENT_IMAGE_SUCCESS = 'UPDATE_DOCUMENT_IMAGE_SUCCESS';\nexport const UPDATE_DOCUMENT_IMAGE_FAIL    = 'UPDATE_DOCUMENT_IMAGE_FAIL';\n\nexport const UPDATE_BACKGROUND_START   = 'UPDATE_BACKGROUND_START';\nexport const UPDATE_BACKGROUND_SUCCESS = 'UPDATE_BACKGROUND_SUCCESS';\nexport const UPDATE_BACKGROUND_FAIL    = 'UPDATE_BACKGROUND_FAIL';\n\nexport const EMBED_CONTENT_START       = 'EMBED_CONTENT_START';\nexport const EMBED_CONTENT_SUCCESS     = 'EMBED_CONTENT_SUCCESS';\nexport const EMBED_CONTENT_FAIL        = 'EMBED_CONTENT_FAIL';\n\nexport const SET_BACK_IMAGE            = 'SET_BACK_IMAGE';","import React, { lazy } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport ReactNotifications from 'react-notifications-component'\nimport './App.scss';\nconst Layout = lazy(() => import('../../components/layout'));\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <ReactNotifications />\n      <Switch>\n        <Route path=\"*\" component={Layout} />\n      </Switch>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import * as actionTypes from '../../actions/auth/auth.actiontype';\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false,\n    message:null,\n    time:null,\n    isAuthenticated:true,\n    profile:{}\n}\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.LOGIN_START: \n             return {...state, error:null, loading:true};\n        case actionTypes.LOGIN_SUCCESS: \n             return {...state, error:null, loading:false, message:action.message};\n        case actionTypes.LOGIN_FAIL: \n             return {...state,error:action.message, loading:false, message:null}\n        case actionTypes.FORGET_START: \n             return {...state, error:null, loading:true};\n        case actionTypes.FORGET_SUCCESS: \n             return {...state, error:null, loading:false, message:action.message};\n        case actionTypes.FORGET_FAIL: \n             return {...state,error:action.message, loading:false, message:null}\n        case actionTypes.VERIFY_START: \n             return {...state, error:null, loading:true};\n        case actionTypes.VERIFY_SUCCESS: \n             return {...state, error:null, loading:false, message:action.message};\n        case actionTypes.VERIFY_FAIL: \n             return {...state,error:action.message, loading:false, message:null}\n        case actionTypes.RESET_START: \n             return {...state, error:null, loading:true};\n        case actionTypes.RESET_SUCCESS: \n             return {...state, error:null, loading:false, message:action.message};\n        case actionTypes.RESET_FAIL: \n             return {...state,error:action.message, loading:false, message:null}\n        case actionTypes.SIGNUP_START: \n             return {...state, error:null, loading:true};\n        case actionTypes.SIGNUP_SUCCESS: \n             return {...state, error:null, loading:false, message:action.message};\n        case actionTypes.SIGNUP_FAIL: \n             return {...state,error:action.message, loading:false, message:null};\n        case actionTypes.CHANGE_PASSWORD_START: \n             return {...state, error:null, loading:true};\n        case actionTypes.CHANGE_PASSWORD_SUCCESS: \n             return {...state, error:null, loading:false, message:action.message};\n        case actionTypes.CHANGE_PASSWORD_FAIL: \n             return {...state,error:action.message, loading:false, message:null}\n        case actionTypes.GET_PROFILE_START:\n             return {...state, error:null, loading:true};\n        case actionTypes.GET_PROFILE_SUCCESS:\n             return {...state, error:null, loading:false, message:action.message, profile:action.profiledata};\n        case actionTypes.GET_PROFILE_FAIL:\n             return {...state,error:action.message, loading:false, message:null}\n        default:\n            return state;\n    }\n}\n\nexport default reducer;\n\n","import * as actionTypes from '../../actions/document/document.actiontype';\n\nconst initialState = {\n    error: null,\n    loading: false,\n    message:\"\",\n    userdocument:[],\n    documentdetail:[],\n    totalpost:null,\n    backimage:[]\n}\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.ADD_DOCUMENT_START:\n            return {...state, error:null, loading:true};\n        case actionTypes.ADD_DOCUMENT_SUCCESS:\n            return {...state, error:null, loading:false, message:action.message};\n        case actionTypes.ADD_DOCUMENT_FAIL:\n            return {...state,error:action.message, loading:false, message:null};\n        case actionTypes.GET_DOCUMENT_START:\n            return {...state, error:null, loading:true};\n        case actionTypes.GET_DOCUMENT_FAIL:\n            return {...state,error:action.message, loading:false, message:null};\n        case actionTypes.GET_DOCUMENT_SUCCESS:\n            return {...state, error:null, loading:false, message:action.message, userdocument:action.documents};\n        case actionTypes.GET_DOCUMENT_BY_ID_START:\n            return {...state, error:null, loading:true}\n        case actionTypes.GET_DOCUMENT_BY_ID_SUCCESS:\n            return {...state, error:null, loading:false, message:action.message, documentdetail:action.documentdetail};\n        case actionTypes.GET_DOCUMENT_BY_ID_FAIL:\n            return {...state,error:action.message, loading:false, message:null};\n        case actionTypes.UPDATE_DOCUMENT_IMAGE_START:\n            return {...state, error:null, loading:true};\n        case actionTypes.UPDATE_DOCUMENT_IMAGE_SUCCESS:\n            return {...state, error:null, loading:false, message:action.message};\n        case actionTypes.UPDATE_DOCUMENT_IMAGE_FAIL:\n            return {...state,error:action.message, loading:false, message:null};\n        case actionTypes.UPDATE_BACKGROUND_START:\n            return {...state, error:null, loading:true};\n        case actionTypes.UPDATE_BACKGROUND_SUCCESS:\n            return {...state, error:null, loading:false, message:action.message};\n        case actionTypes.UPDATE_BACKGROUND_FAIL:\n            return {...state,error:action.message, loading:false, message:null};\n        case actionTypes.SET_BACK_IMAGE:\n            return {...state,backimage:action.backimage}\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import * as actionTypes from '../../actions/cms/cms.actiontype';\n\nconst initialState = {\n    error: null,\n    loading: false,\n    message:\"\",\n    usercms:[],\n    cmsdetail:[],\n    totalcms:null\n}\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.ADD_CMS_START:\n            return {...state, error:null, loading:true};\n        case actionTypes.ADD_CMS_SUCCESS:\n            return {...state, error:null, loading:false, message:action.message};\n        case actionTypes.ADD_CMS_FAIL:\n            return {...state,error:action.message, loading:false, message:null};\n        case actionTypes.GET_CMS_START:\n            return {...state, error:null, loading:true};\n        case actionTypes.GET_CMS_FAIL:\n            return {...state,error:action.message, loading:false, message:null};\n        case actionTypes.GET_CMS_SUCCESS:\n            return {...state, error:null, loading:false, message:action.message, usercms:action.cms};\n        case actionTypes.GET_CMS_BY_ID_START:\n            return {...state, error:null, loading:true}\n        case actionTypes.GET_CMS_BY_ID_SUCCESS:\n            return {...state, error:null, loading:false, message:action.message, cmsdetail:action.cmsdetail};\n        case actionTypes.GET_CMS_BY_ID_FAIL:\n            return {...state,error:action.message, loading:false, message:null};\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import * as actionTypes from '../../actions/frames/frames.actiontype'\n\nconst initialState = {\n\tselected_frame: \"\"\n};\n  \nconst frameReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase actionTypes.SELECT_FRAME:\n\t\t\treturn {\n\t\t\t\t...state, selected_frame: action.payload\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\nexport default frameReducer;","import * as actionTypes from '../../actions/photos/photos.actiontype'\n\nconst initialState = {\n\tphotos: [],\n\tframes: [],\n\tnumber_of_remain:1\n  };\n  \nconst photoReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase actionTypes.PHOTO_CAPTURED:\n\t\t\treturn { ...state, photos: [...state.photos, action.photo], frames: state.frames.concat([action.frames]), number_of_remain: state.number_of_remain - 1 }\n\t\tcase actionTypes. RESET_PHOTOS:\n\t\t\tdebugger\n\t\t\treturn initialState\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\nexport default photoReducer;","import { combineReducers } from 'redux'\nimport authReducer from './auth/auth.reducer';\nimport documentReducer from './document/document.reducer';\nimport cmsReducer from './cms/cms.reducer';\nimport frameReducer from './frames/frames.reducer';\nimport photoReducer from './photos/photos.reducer';\n\nconst rootReducer = combineReducers({\n    authReducer,\n    documentReducer,\n    cmsReducer,\n    frameReducer,\n    photoReducer,\n})\n\nexport default rootReducer","import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './reducers';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    ));\n\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React,{Suspense} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/App/App';\nimport { BrowserRouter } from 'react-router-dom';\nimport store  from './store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render((\n      <Provider store={store}>\n        <BrowserRouter>\n            <Suspense fallback={<div></div>}>\n               <App />\n            </Suspense>\n        </BrowserRouter>\n      </Provider>\n    ),\n    document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}